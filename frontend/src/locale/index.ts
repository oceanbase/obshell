/*
 * This file is generated by bailingual cli
 * 更多关于百灵 SDK 的用法，请访问文档: https://yuque.antfin.com/bailingual/guides/bailingual-sdk-glue
 */
import { Intl } from "@alipay/bailingual-sdk-glue";

/**
 * 如果你的页面只会使用当前唯一的百灵应用，你也可以使用 import $i18n from "@alipay/bailingual-sdk-glue"; 这时使用的是 sdk 默认导出的公共百灵多语言实例。
 * 使用 new Intl 的好处是，页面中可以有多个互相独立的百灵多语言实例，比如主应用、子应用、组件库均使用不同的百灵应用实现多语言。
 */
const $i18n = new Intl();

/**
 * 引入 tnpm 包后，可以替换为
 * import strings from '@alipay/bailingual_OBShell'
 */
import strings from "./strings";

$i18n.initData(strings);

/**
 * ⚠️请删除此段使用英文作为默认语言的代码，默认使用系统跟随语言
 */
$i18n.changeLocale("en-US");

/**
* 如果使用 CDN 作为实时更新，请取消此注释，并替换为正确的 appName
 $i18n.patchI18n({
  appName: 'OBShell',
 }, {
  // 这里有三个字段: isIntranet、buIdentifier、isDaily

  // 1. isIntranet: 可使用 ture 或者 false
  // 如果你的百灵应用网络类型为 “互联网”，不需要传 isIntranet 字段，

  // 2. isDaily: 可使用 true 或 false，默认不传，使用线上数据
  // 仅当你测试过程中要访问百灵非线上 CDN 数据时才需要传入 isDaliy: true

  // 3. buIdentifier: 可使用 'ANTINTL' 或 'ALIPAY'
  // 该字段为 @alipay/bailingual-sdk-glue 7.0.0 版本开始新增的字段，用于标识具体 BU，允许使用各 BU 的自有 CDN 加载文案
  // 如果你的百灵应用网络类型为 “办公网”，不需要传入
  // 如果你的百灵应用网络类型为 “互联网”，则必须传入 buIdentifier 字段，否则 patchI18n 会报错
  //  若在百灵平台创建应用时选择的业务单元为 “支付宝”，请传入 buIdentifier: 'ALIPAY'
  //  若在百灵平台创建应用时选择的业务单元为 “蚂蚁国际”，请传入 buIdentifier: 'ANTINTL'
  // “业务单元”可以在百灵应用的“应用设置”页面找到，如果对此字段有任何疑问，请联系百灵技术支持 @之其
 })
**/

/**
* patchI18n 方法第一个参数传入 appName 与 tag。多个 app 的情况下，传入数组即可
*
* @param packages : Array<{
*   appName: string,
*   tag?: string,
* }> | {
*   appName: string,
*   tag?: string,
* }
*
* 第二个参数按情况传
*
* @param env : {
*   isIntranet?: boolean,
*   isDaily?: boolean,
*   buIdentifier?: string,
* }
*
$i18n.patchI18n([{
  appName: 'OBShell'
}], {
  isIntranet: true,
  isDaily: true,
  buIdentifier: 可使用 ALIPAY 或 ANTINTL，具体看上面的解释
})
**/

/**
 * 示例代码：
 * 1. 切换语言，⚠️语言必须与 CDN 或 TNPM 包内使用的语言一致
 * $i18n.changeLocale('zh-CN')
 * 了解更多关于 locale 的信息，可访问 https://yuque.antfin.com/bailingual/guides/supported-locales
 *
 *
 * 2. 消费多语言 key
 *
 * $i18n.get('key1')
 *
 * 可指定默认值
 * $i18n.get({
 *  id: 'key1',
 *  dm: '明月几时有'
 * })
 *
 * 对于带有 { } 的译文，还支持传入变量
 * 关于变量的更多写法，比如单复数、条件判断等，请访问文档: https://yuque.antfin.com/bailingual/guides/icu-syntax
 * eg:
 *  KEY: say.hi
 *  英文翻译: Hi, {name}
 *  中文翻译: {name} 你好
 *
 * $i18n.get({
 *  id: 'say.hi',
 *  dm: '你好'
 * }, {
 *  name: 'Bailingual'
 * })
 *
 * 输出:
 * 英文: Hi, Bailingual
 * 中文: Bailingual 你好
 *
 *
 * 3. 获取所有多语言内容
 * $i18n.getAllData()
 *
 * 返回的数据格式示例：
 * {
 *  'en-US': {
 *    'key1': 'hello',
 *    'key2': 'world'
 *  },
 *  'zh-CN': {
 *    'key1': '你好',
 *    'key2': '世界'
 *  }
 * }
 *
 *
 * 4. 获取当前语言，返回值示例：zh-CN/zh-HK/en-US/
 * $i18n.getCurrentLocale()
 *
 *
 * 5. 监听语言包数据变化
 * $i18n.on('bailingualDataChange', (i18nData) => {
 * })
 *
 *
 * 6. 监听语言变化
 * $i18n.on('bailingualLocaleChange', (newLocale) => {
 * })
 **/

export default $i18n;
